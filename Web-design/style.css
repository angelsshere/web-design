@charset "utf-8";
/* MU */
/*①header.page-header wrapper>(h1>a>img)nav>ul>li*3>a */
/*heder href=index.html alt=WCBカフェ ホーム li href=news.html{News} li href=menu.html{Menu} li href=contact.html{Contact}↓Co*/

/* ⑯ div.home-content.wrapper>h2.page-title{We'll Make Your Day}+p{おしゃれなカフェで癒やされてみませんか？無添加食材で体の中からリフレッシュ。}+a.button{メニューを見る}↓hero home-contact*/

/* ㉘ div#home.big-bg>で①を囲む↓#home.big-bg */

/* news.html */
/* ㉞ index.htmlを貼り付けしtitleをWCB Cafe - NEWSに書き換え*/
/* ㉟hederはそのままに… */
/* ㊱.home-contact wrapperを.wrapperに変更 */
/* ㊲h2.page-titleを{news}に変更しｐとリンク（a）｛メニューを見る｝を消す NEWSへ↓*/

/* ㊷footer>.wrapper>small>をMu ↓footer*/

/* article>header */

/* ㊽.div.news-contents.wrapper>article>header.post-info>h2.post-title{店内ギャラリーの絵が新しくなりました}+p.post-date{12/31}>span{2021}+p.post-cat{カテゴリー:お店の紹介}を記述*/
/* ㊾ ㊽の次にimg alt(お店の様子)+p{}+p{}を記述 */
/* ㊿ .news-contents.wrapper>articleの次にaside>h3.sub-title{カテゴリー}+(ul.sub-menu>li*4>a)+h3.sub-title{このお店について}+p{体に優しい自然食を提供する、WCB CAFE。無添加の食材を利用したメニューが特徴です。美味しいブレンドコーヒーとヘルシーなオーガニックフードで体の内側から癒やされてください。}を記述↓ article aside common */

/* 71..news-contents wrapper>.ad>img./images/banner.jpg ↓NEWS article aside commonへ */

/* 74..menu.htmlをコピーし不要なHTMLを削除する。.menu-contentは#menu .big-bgを親とし中へ入れること。↓Menuへ */

/* 81.menu-contentのあとにdiv.wrapper gridを記載grid画像数は9でgrid記述方法は.item>img>p{写真キャンプション写真キャンプション} ↓menu grid */

/* 89.Menuのbody内をコピペして不要な部分の削除、教本252ページ body↓のID名をcontactに変更*/

/* 90.hederの下にお問い合わせフォームを追加↓contact */

/* 101.お店情報の記述*/
/* div.wrapperとfooterの間にsection#location>div.wrapper>h3.sub-title{住所、tel、営業時間、休日。}を記述 */

/* 102.Google Mapを記述 */
/* <!--/location-info-->と<!--/.wrapper-->の間にdiv.location-mapを記述↓店情報・地図 */

/* 104.Facebook,twitter,youtubeのプラグインを<!--/#location-->の後に記述↓SNS */

/* 106.プラグイン位置にFacebook,twitter,youtubeを挿入参考書籍Ｐ263参照 ↓メディアクエリ*/

/* index.html */

/* common */
/* これを設定しないと.post-dateの  width: 100px;
  height: 100px;で上手く楕円形にならない。 */
*,
*::before,
*::after {
	box-sizing: border-box;
}
/*参考書P179の1行目に記載、google font用のCSSを記載する。*/
/* @import url('https://fonts.googleapis.com/css2?family=Philosopher&display=swap'); */

/* header{
  outline: solid 2px red;
} */
/* ②ブラウザの種類や見てくれるユーザーが設定した状態によって適切に変化しユーザビリティを考慮したデザインにしてくれるように設定 */
html {
	font-size: 100%;
}
/* ③ 書体の設定＝"Yu Gothic Medium","遊ゴシック Medium",YuGothic,"游ゴシック体","ヒラギノ角ゴ pro w3",sans-serif*/
/* ④行の高さ1.7 */
/* ⑤文字色＃432 */

body {
	font-family: 'Yu Gothic Medium', '遊ゴシック Medium', YuGothic, '游ゴシック体',
		'ヒラギノ角ゴ pro w3', sans-serif;
	line-height: 1.7;
	color: #432;
}
/* ⑥aタグの下線を消す。設定した色を継承 */
a {
	text-decoration: none;
	color: inherit;
}
/* ⑦画像サイズを設定 (画像が親要素よりも大きくなるのを防ぐ)↓header*/
img {
	max-width: 100%;
}

/* header */

/* ⑧.logoのwidthサイズを210px指定上に14pxの余白 */

.logo {
	width: 210px;
	margin-top: 14px;
}
/* ⑨.menu-navを横並び 文字サイズ1.25rem 、大文字指定、上に34pxの余白、*/
.main-nav {
	display: flex;
	font-size: 1.25rem;
	text-transform: uppercase;
	margin-top: 34px;
}
/*⑩リストの2番目と3番目の左側に36pxの余白 */
.main-nav li + li {
	margin-left: 36px;
}

/* ⑪main-navのリンク領域にホバーすると、.3sかけて色が#0bd */
.main-nav a {
	transition: color 0.3s;
}
.main-nav a:hover {
	color: #0bd;
}

/* ⑫ logoとnavを横並びに間を開ける*/
.page-header {
	display: flex;
	justify-content: space-between;
}
/* ⑬headerに最大幅1100pxを設定 */
/* ⑭headerに1100pxの領域を中央揃え */
/* ⑮両端内側に4％の余白を付けてレスポンシブウェブ（スマホ）でも見やすく設定↑Mu */
.wrapper {
	max-width: 1100px;
	margin: 0 auto;
	padding: 0 4%;
}

/* hero home-content */

/* ⑰ .home-contentを中央に配置の上に10%の余白*/
.home-content {
	text-align: center;
	margin-top: 10%;
}
/* ⑱.home-content pの文字サイズを1.125rem 上10px下42pxに余白 */
.home-content p {
	font-size: 1.125rem;
	margin: 10px 0 42px;
}
/* ⑲.page-title のフォントサイズを1.375rem*/
/* ⑳.page-titleのフォントの指定はgoogle-fontで取得した"Philosopher", sans-serif */
/* ㉑.page-titleのフォントに大文字の指定 */
.page-title {
	font-size: 5rem;
	font-family: 'Philosopher', sans-serif;
	text-transform: uppercase;
}

/* ㉒.buttonのフォントサイズ1.375rem */
/* ㉓.buttonの背景色は#0bd */
/* ㉔.buttonの文字色は#fff */
/* ㉕.buttonのborder-radiusは5px */
/* ㉖.buttonの内側上下18px左右32px */
.home-content .button {
	font-size: 1.375rem;
	background: #0bd;
	color: #fff;
	border-radius: 5px;
	padding: 18px 32px;
	transition: background 0.3s;
}

/* ㉗.buttonに:hoverすると.3sかけて色を#0090aa ↑Mu*/
.button:hover {
	background: #0090aa;
}

/* ㉙.big-bgに画像のたて横比を保てるようcoverを設定 */
/* ㉚ .big-bgの 表示位置を中央の上部に設定（デザイン上の演出優しい色合いのコーヒーが見えるように画面一杯に表示されたときコーヒーが大きく見える様に、画面下をトリミングしている。）*/
/* ㉛.big-bgの画像がタイル上などに繰り返し表示されないように設定 */
.big-bg {
	background-size: cover;
	background-position: center top;
	background-repeat: no-repeat;
}

/* ㉜#homeに背景画像の指定㉛高さを画面サイズに対する割合100％の100vhに最小値min-height（指定した数値以下にはならない）で設定 */
#home {
	background-image: url(./images/main-bg.jpg), linear-gradient(#c9ffbf, #ffafbd);
	/* ブレンドモード 輝度 */
	background-blend-mode: luminosity;
	/* bodyの高さで終わらないように、ブラウザの高さいっぱいに広げる */
	min-height: 100vh;
}
/* ㉝ テキストの大文字小文字の変換をしないよう設定 news.htmlのMuへ↑*/
#home .page-title {
	text-transform: none;
}

/* NEWS */
/* ㊳#newsの背景画像を設定*/
/* ㊴#newsの高さを270ｐに設定 */
/* ㊵#newsの背景画像の下に40pxの余白 */
#news {
	background-image: url(./images/news-bg.jpg);
	height: 270px;
	margin-bottom: 40px;
}
/* ㊶#newsの.page-titleを中央に配置 ↑Mu*/

#news .page-title {
	text-align: center;
}

/* article aside common */

/*51.articleとasideのwidth割合をarticle74%、aside22%に指定 */
/*72.3columnsにすべく画面幅を60%に縮めて表示 */
/* 73.articleとasideと.adに番号をふって左から配置順を変更してみる。[*googleの検索エンジンに影響するので、重要なコンテンツはHTMLの記述順で行いデザインの為に配置を変えるならCSSで行う事] ↑Mu*/
article {
	width: 60%;
	order: 2;
}
aside {
	width: 22%;
	order: 3;
}
.ad {
	order: 1;
}

/* 52. .news-contentsをflex-boxでarticleとasideを横並びにして下部に余白を50px */
/* 53.間を開ける */
/* 54.下部に50pxの余白 ↓article */
.news-contents {
	display: flex;
	justify-content: space-between;
	margin-bottom: 50px;
}

/* article */

/*55. .post-info の内側上部に4pxの余白*/
/* 56..post-infoの下部に40pxの余白 */
/* 59. .post-dateをpositionプロパティで配置するので親要素(.post)の既存位置に配置させたいのでrelativeを設定*/
.post-info {
	position: relative;
	padding-top: 4px;
	margin-bottom: 40px;
}
/* 57..post-dateの背景色を#obd、丸く設定、文字色を＃fff、幅を100px、高さを100px、文字サイズを1.625rem、左右中央、内側上部に10pxの余白 */
/* 58..post-info領域の一番上に配置 */
.post-date {
	background: #0bd;
	border-radius: 50%;
	color: #fff;
	width: 100px;
	height: 100px;
	font-size: 1.625rem;
	text-align: center;
	position: absolute;
	top: 0;
	padding-top: 10px;
}

/* 60
. .post-dateのspanのスタイリング文字サイズを1rem、境界線を上に幅1px、直線、色をrgb(255,255,.5)で配置内側上部に5pxの余白、幅を60％、左右中央に配置しblock要素に対しサイズ指定ができる様設定*/

.post-date span {
	font-size: 1rem;
	border-top: 1px rgba(255, 255, 255, 0.5) solid;
	padding-top: 6px;
	display: block;
	width: 60%;
	margin: 0 auto;
}

/* 61..post-titleのfont-familyを"Yu Mincho""YuMincho",serif;に指定、フォントサイズは2rem。 */
.post-title {
	font-family: 'Yu Mincho', 'YuMincho', serif;
	font-size: 2rem;
}

/* 62..post-titleの.post-catの左側に120pxの余白を */
.post-title,
.post-cat {
	margin-left: 120px;
}
article img {
	margin-bottom: 20px;
}
article p {
	margin-bottom: 1rem;
}

/* サイドバー  */
/* 63. .sub-title font-size10375rem、下線border-bottom2px solid #0bd、内側余白0 8px 8px*/

.sub-title {
	font-size: 1.375rem;
	border-bottom: 2px solid #0bd;
	padding: 0 8px 8px;
}

/* 64.aside p 内側余白12px 10px */

aside p {
	padding: 12px 10px;
}

/* カテゴリーリスト */
/* 65..sub-menu 外白下 60px  */
.sub-menu {
	margin-bottom: 60px;
}
/* 66..sub-menu li 境線下 #ddd 1px solid */
.sub-menu li {
	border-bottom: 1px solid #ddd;
}
/* 67..sub-menu a #432 内白10px リンククリック範囲広大 */
.sub-menu a {
	color: #432;
	padding: 10px;
	display: block;
	transition: color 0.3s;
}
/* 68.sub-menu a hover #0bd */
.sub-menu a:hover {
	color: #0bd;
}

/* footer */

/* ㊸左右中央に配置 */
/* ㊹背景色＃432 */
/* ㊺内側上下に26pxの余白 */
/*  */
footer {
	text-align: center;
	background: #432;
	padding: 26px 0;
}
/* ㊻ 文字色＃fff*/
/* ㊼font-size0.875rem ↑Mu*/
footer p {
	color: #fff;
	font-size: 0.875rem;
}

/* 87.スマホ画面で見ると画像がちぐはぐな状態となって表示され見難くなってしまうこれを回避するにはgrid-columnとgrid-rowを範囲指定している値をautoにする。 */

/* http://www.htmq.com/css/grid-column.shtml */

/* Menu */

/* 75.#menu 背景画像(images/menu-bg.jpg)の高さの値を指定しそれ以下にならないように表示値は100vh(viewportを100％画面の高さと同じ100％) min-heightは親要素範囲領域において要素の高さを指定しこれを最小値で指定してこれ以下にはならないようにする為のプロパティ*/
/*76..menu-content 最大幅560px外白上10% */
/* 77..menu-content .page-title textを中央よりに */
/* 78..menu-content p fsz 1.125rem 外白10px 0 0↑メディアクエリ */

#menu {
	background-image: url(./images/menu-bg.jpg);
	min-height: 100vh;
}
.menu-content {
	max-width: 560px;
	margin-top: 10%;
}
.menu-content .page-title {
	text-align: center;
}
.menu-content p {
	font-size: 1.125rem;
	margin: 10px 0 0;
}

/*82.menu grid */
/* .grid grid gap26px 3列縦外白上6%外下50px */
/* .grid{
  display: grid;
  gap: 26px;
  grid-template-columns: 1fr 1fr 1fr;
  margin-top: 6%;
  margin-bottom: 50px;
} */

/*83.menu grid */
/* repeatを使った方法 */

/* .grid{
  display: grid;
  gap: 26px;
  grid-template-columns: repeat(3,1fr);
  margin-top: 6%;
  margin-bottom: 50px;
} */

/*84.menu grid */
/* min maxを使った方法、スマホなどで見ると画像が小さくて見づらい状態の場合には最小値最大値を設定し「これ以上小さくなって見づらくしない」様に、三つ繰り返し並べた枠を最小値240px最大値1frで表示する。と設定。 */

/* .grid{
  display: grid;
  gap: 26px;
  grid-template-columns: repeat(3,minmax(240px,1fr));
  margin-top: 6%;
  margin-bottom: 50px;
} */

/*84.menu grid */
/* 83.で設定するとスマホ画面では3列以下の幅では画像が見切れてしまい上手く表示できない。画面幅に合わせて列数を自動で表示してくれるauto-fitを使えば最小値の240pxまでは表示列を3列から2列に自動調整して表示してくれる。 */

/* .grid{
  display: grid;
  gap: 26px;
  grid-template-columns: repeat(auto-fit,minmax(240px,1fr));
  margin-top: 6%;
  margin-bottom: 50px;
} */

/* 86. 3番目の画像を大きくし強調させようとすると既存位置からズレて空白ができ穴が空いてしまう。これを回避するには.gridにgird-auto-flowプロパティを指定しdenseを記述する。↑メディアクエリ */

.grid {
	display: grid;
	grid-auto-flow: dense;
	gap: 26px;
	grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
	margin-top: 6%;
	margin-bottom: 50px;
}

/* 85.1番目のコーヒーの画像だけを2倍に大きくし強調させ縦横比の歪を修正させる、もしくは3番目のヨーグルトの画像だけを2倍に大きく強調させる */

.big-box {
	grid-column: span 2;
	grid-row: span 2;
}

/* 86.スマホ表示にすると大きい画像と小さい画像の枠幅が揃わないので画像に対してリサイズをかける */
.big-box img {
	height: 94%;
	width: 100%;
	/* 87.フルサイズで見ると大きい画像の縦横比がズレて歪んでいるのでobject-fit:cover;で修正をかける。 ↓メディアクエリ*/
	object-fit: cover;
}

/* メディアクエリ */
/* 注意！@mediaを記述する際は必ずCSSファイルの一番後ろに位置させる事（CSSでは一番後ろの記述が優先される為） */

/* 69. max-width:600pxモバイルサイズ*/
/* .page-title font-size 2.5rem */

/* Header .main-nav font-size 1rem 外白上 10px */

/* .main-nav li 外白 0 20px */

/* Home .home-contact 外白上 20% */

/* 70.コンテンツを縦並びにMu↑ */

/* .page-headerを flexboxで縦並びの中央よりに */

/* News */
/* .news-contentsを flexboxで縦並びの中央より*/
/* article,aside width100%で広大表示 */

/*#news .page-titleの外白上30px  */

/*asideの外白上60px  */

/*.post-infoの外白下30px*/

/*.post-date width 70px height 70px fsz 1rem */

/* .post-date span fsz0.875rem 内白上2px */

/* .post-title fsz1.375rem */

/* .post-cat fsz0.875rem 外白上10px */

/* .post-title,.post-cat 外白左80px */

/* Menu */
/* 79. .menu-content 外白上20%*/

/* contact */
/* 91.背景に画像を表示 */
#contact {
	background-image: url(./images/contact-bg.jpg);
	min-height: 100vh;
}

/* 92.form divに外白下14px*/

/* Google formを使用しているなら不要 */

form div {
	margin-bottom: 14px;
}

/* 93.labelの文字サイズ1.125rem、外白下10px、インライン要素解除(textの横にある入力箇所を下に配置させる) */

/* Google formを使用しているなら不要 */

label {
	font-size: 1.125rem;
	margin-bottom: 10px;
	display: block;
}

/* 94.input[type="text"]（属性） input[type="email"] （属性）textarea(textareaは閉じタグがあるので属性指定しなくても要素型セレクターで指定できる) の背景を#255,255,255,.5 境界線、1px,#fff,solid,border-radius 5px、 内白上下左右10px文字サイズ1rem */

/* Google formを使用しているなら不要 */

input[type='text'],
input[type='email'],
textarea {
	background: rgba(255, 255, 255, 0.5);
	border: solid 1px #fff;
	border-radius: 5px;
	padding: 10px;
	font-size: 1rem;
}

/* 95.input[type="text"](属性) input[type="email"](属性)の幅を最小画面でも100％で表示して最小の画面幅でも入力箇所が全表示できる様にし最大の画面幅では最大値240pxのサイズで表示させる。*/

/* Google formを使用しているなら不要 */

input[type='text'],
input[type='email'] {
	width: 100%;
	max-width: 240px;
}

/* 96．メッセージのtextarea幅を最小画面でも100％で表示して最小の画面幅でも入力箇所が全表示できる様にし最大の画面幅では最大値480pxのサイズで表示させる。高さを6remで表示させる。*/

/* Google formを使用しているなら不要 */

textarea {
	width: 100%;
	max-width: 480px;
	height: 6rem;
}

/* Google formのリンク srcにclass名.formを付けているので.wrapper .formに幅を小さく表示されないように100％表示させ最小画面でも640px幅に表示させる。高さはスクロールしない様に80remで指定。 */

/* .wrapper .form {
	width: 100%;
	max-width: 640px;
	height: 80rem;
} */

/* 97.input[type="submit"] の境界線を無しにしてpointerを表示させ高さをline-heightで1に設定。*/

/* Google formを使用しているなら不要 */

input[type='submit'] {
	border: none;
	cursor: pointer;
	line-height: 1;
}

/* 98..buttonの文字サイズなど各装飾を指定↓メディアクエリ */

/* Google formを使用しているなら不要 */

.button {
	width: 120px;
	height: 50px;
	border-radius: 5px;
	background: #0bd;
	color: #ddd;
	font-size: 18px;
}

/* お店情報・地図 */

/* 103.#locationの内白上下0％ */
#location {
	padding: 4% 0;
}

/* 横並びにして情報と地図の間隔を開ける */
#location .wrapper {
	display: flex;
	justify-content: space-between;
}

/* location-infoの横幅を22％に設定 */
.location-info {
	width: 22%;
}

/* location-info pの内白12px 10px */
.location-info p {
	padding: 12px 10px;
}

/* location-mapの幅を74% */
.location-map {
	width: 74%;
}

/* ブラウザ幅がちいさくなってもiframeの幅を100％に表示 */

iframe {
	width: 100%;
}

/* SNS */

/* 105.#snsの背景色#FAF7F0で内白4％ 0 */

#sns {
	background: #faf7f0;
	padding: 4% 0;
}
/* #sns.wrapperを横並びで間隔を開ける */
#sns .wrapper {
	display: flex;
	justify-content: space-between;
}
/* #sns.sub-titleの外白下30px */
#sns .sub-title {
	margin-bottom: 30px;
}
/* .sns-boxの横幅30％に ↑Mu*/
.sns-box {
	width: 30%;
}

@media (max-width: 600px) {
	/* index.html */
	/* .page-title font-size 2.5rem */
	.page-title {
		font-size: 2.5rem;
	}
	/* Header */
	/*  .main-nav font-size 1rem 外白上 10px */
	.main-nav {
		font-size: 1rem;
		margin-top: 10px;
	}
	/* .main-nav li 外白 0 20px */
	.main-nav li {
		margin: 0 20px;
	}
	/* Home */
	/*  .home-contact 外白上 20% */
	.home-content {
		margin-top: 20%;
	}
	/* .page-headerを flexboxで縦並びの中央よりに */
	.page-header {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	/* news.html */
	/* 70..news-contents flexboxで縦並びの中央より*/
	.news-contents {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	/* article,aside width100%で広大表示 */
	article,
	aside {
		width: 100%;
	}
	/*#news .page-titleの外白上30px  */
	#news .page-title {
		margin-top: 30px;
	}
	/*asideの外白上60px  */
	aside {
		margin-top: 60px;
	}
	/*.post-infoの外白下30px*/
	.post-info {
		margin-bottom: 30px;
	}
	/*.post-date width 70px height 70px fsz 1rem */
	.post-date {
		width: 70px;
		height: 70px;
		font-size: 1rem;
	}
	/* .post-date span fsz0.875rem 内白上2px */
	.post-date span {
		font-size: 0.875em;
		margin-top: 2px;
	}
	/* .post-title fsz1.375rem */
	.post-title {
		font-size: 1.375rem;
	}
	/* .post-cat fsz0.875rem 外白上10px */
	.post-cat {
		font-size: 0.875em;
		margin-top: 10px;
	}
	/* .post-title,.post-cat 外白左80px */
	.post-title,
	.post-cat {
		margin-left: 80px;
	}
	/* Menu */
	/* 79. .menu-content 外白上20% ↑Mu*/
	.menu-content {
		margin-top: 20%;
	}

	/* 87.スマホ表示で見ると画像の大きさが”ちぐはぐ”に表示されるのでそれをgrid-column:auto; grid-column:auto;で修正をかける。 */

	.big-box {
		grid-column: auto;
		grid-row: auto;
	}
	/* 88.スマホ表示で2列3列とすると大きくした画像の高さがほかの画像と比較すると揃っていないのでheight:auto;を使ってリサイズをかけます。↑Mu */
	.big-box img {
		height: auto;
	}

	/* contact */

	/* 99.#contact .page-titleの外白上40px */
	#contact .page-title {
		margin-top: 40px;
	}

	/* フォーム */

	/* Google formを使用しているなら不要 */

	/* 100.input[type="text"](属性) input[type="email"](属性)textarea(textareaは閉じタグがあるので属性指定しなくても要素型セレクターで指定できる)の画面幅がスマホサイズになると最大幅を100％で表示して入力しやすく表示↑Mu */
	input[type='text'],
	input[type='email'],
	textarea {
		max-width: 100%;
	}
	/* お店情報・地図・/SNS/ */

	/* 107.#location .wrapper,#sns .wrapperを縦並びに */

	#location .wrapper,
	#sns .wrapper {
		flex-direction: column;
	}
	/* 108. .location-info,.location-map,sns-boxの幅をメディアクエリの幅になると幅が100％表示されるように設定 */
	.location-info,
	.location-map,
	.sns-box {
		width: 100%;
	}
	/* 109..sns-boxの外白下30px*/
	.sns-box {
		margin-bottom: 30px;
	}
}
